#include <FileComputation.h>
#include <CLI/CLI.hpp>

namespace Izip {
class App
{
public:
  App();
  ~App() = default;

  // delete standard functions generated by compiler.
  App(App &) = delete;
  App(App &&) = delete;
  App &&operator=(App &&) = delete;
  App &operator=(App &) = delete;

  int get_exit_code() const;
  int start(int argc, char **argv);

  std::unique_ptr<CLI::App> Arg_parser;

private:
  // Properties
  Wrappers::CompFile::FileComputation &fileComputation = Wrappers::CompFile::FileComputation::getInstance();
  int exit_code = 0;
  std::string VERSION = "1.0";

  // Options
  CLI::Option *OptVersion = nullptr;
  CLI::Option *OptDecompress = nullptr;
  CLI::Option *OptCompress = nullptr;
  CLI::Option *OptRecursive = nullptr;
  CLI::Option *OptPermissions = nullptr;
};
} // namespace Izip
